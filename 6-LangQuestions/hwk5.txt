===========================================
 || Christopher Myers and Michael Krebs ||
===========================================
____________________

 QUESTION 1
____________________

PART A)
   Three features of Lisp that Graham believes gave
his company a competitive advantage were one Lisp is a
good language for writing software quickly, two Lisp
has the most powerful macros because it has "no syntax"
and three Lisp is so high level that they didnt have to
hire a big development team which saved them money.

PART B)
   The two observations that we found to be the most interesting
were the Blub paradox and that computer hardware changes so much
faster than personal habits.
   The Blub paradox is when a programmer is devoted to a certain
langauge so much so that they think all languages are either not
worth learning because they are satisfied with their langauge or
too simplistic because it does not support features that their
langauge does. Essentially they can't imagine a language more
powerful than their own because the more powerful languages
aren't considered to be more powerful, just different, and the
less powerful languages to be too simplistic. We found this
observation to be significant because it displays the foolishness
of being monolingual when it comes to programming.
   Graham's observation that computer hardware changes so much
faster than personal habits means that the full capabilities of a
new language or hardware is never implemented until many years later.
And this is because people are unwilling or incapable of switching
their habits to the new capabilities. We found this to be a
significant observation because it stresses the abiility to adapt
when being a programmer, it is similar to how being monolingual is
foolish but instead focuses more on the premise of being unable
to change and mold as a programmer is foolish.

____________________

 QUESTION 2
____________________

 Three questions that Graham teaches to ask when approaching a new
language are "Who is this programmed designed for?" "How many people
were behind its creation?" and "Why are people using it?."
If the answer to these questions are "for large organizations and thus
best for a wide range of skilled programmers," "more than a small group
who developed the language for their own use" and "because their bosses
are telling them to or they hear its great from the press" respectively,
then the langauge is likely to not be successful. Good langauges are
instead limitless to the programmer and not designed to be easy. They
should be made because it was used to better serve the creators; the
program had a function,and finally it should be used because
programmers love it not becausethey are forced to use it or influenced to.

____________________

 QUESTION 3
____________________

a) Our chosen language is the language obeyed by students
   in a cafeteria.

b) The community of people is all students who have access to the cafeteria
   who want to eat.

c) The programs of the langauge are lists of instructions on what food to get.

d) The data of the language are the names of food items to (potentially) acquire. Operations are
   what to do with those food items (e.g. check if there's any left, check the
   freshness, etc.), and control is just simple if statements based on predefined
   functions that represent preferences (eg. "if cookies are fresh...")

e) The language syntax is series of commands concerning food items that are
   largely defined by food availability and individual preferences. Ultimately,
   all programs end with eating.

f) The "Data values" in this language are strings. However, creative interpretation of
   this could result in data values from other senses, such as sight or smell.

g) An interpreter for this language is simply a hungry student.

h) This language could, in theory, be processed by a computer. However, a computer
   would be unable to complete the last part of the language specification (eating).
   If a computer was capable of completing this last step, we have far more to worry
   about than language specifications.
